{"version":3,"sources":["components/ContactForm/ContactForm.styled.jsx","redux/phonebook/phonebook-selectors.js","services/phonebook-API.js","redux/phonebook/phonebook-actions.js","components/ContactForm/ContactForm.jsx","redux/phonebook/phonebook-operations.js","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/App.jsx","redux/phonebook/phonebook-reducers.js","redux/store.js","index.js"],"names":["Form","styled","form","Label","label","getItems","state","contacts","items","entities","getFilter","filter","getFilteredContacts","createSelector","contact","name","toLowerCase","includes","BASE_URL","fetchContacts","a","fetch","method","headers","response","json","data","addContact","body","JSON","stringify","deleteContact","id","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContacts","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","onSubmit","e","preventDefault","isInList","length","some","alert","phonebookActions","phonebookAPI","type","value","onChange","target","pattern","title","required","Filter","actions","Button","button","Li","li","P","p","ContactList","filteredContacts","useEffect","map","onClick","App","createReducer","_","payload","item","String","isLoading","error","itemsReducer","combineReducers","filterReducer","contactsReducer","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c6fc807.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  border: 1px black solid;\r\n  padding: 30px;\r\n  width: 300px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  margin-bottom: 20px;\r\n  flex-direction: column;\r\n`;\r\n","import { createSelector } from 'reselect';\n\nexport const getItems = state => state.contacts.items.entities;\nexport const getFilter = state => state.contacts.filter;\nexport const getFilteredContacts = createSelector(\n  [getFilter, getItems],\n  (filter, items) =>\n    items.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    ),\n);\n","const BASE_URL = 'http://localhost:7777';\r\n\r\nexport async function fetchContacts() {\r\n  const response = await fetch(`${BASE_URL}/contacts`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n\r\nexport async function addContact(contact) {\r\n  const response = await fetch(`${BASE_URL}/contacts`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(contact),\r\n  });\r\n\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n\r\nexport async function deleteContact(id) {\r\n  await fetch(`${BASE_URL}/contacts/${id}`, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n}\r\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'phoneBook/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'phoneBook/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('phoneBook/fetchContactsError');\n\nexport const addContactRequest = createAction('phoneBook/addContactRequest');\nexport const addContactSuccess = createAction('phoneBook/addContactSuccess');\nexport const addContactError = createAction('phoneBook/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'phoneBook/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'phoneBook/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('phoneBook/deleteContactError');\n\nexport const filterContacts = createAction('phoneBook/filterContacts');\n","import React, { useState } from 'react';\r\nimport { Form, Label } from './ContactForm.styled';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getItems } from '../../redux/phonebook/phonebook-selectors';\r\nimport { addContact } from '../../redux/phonebook/phonebook-operations';\r\n\r\nexport const ContactForm = () => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const items = useSelector(getItems);\r\n  const dispatch = useDispatch();\r\n\r\n  const formSubmit = e => {\r\n    e.preventDefault();\r\n    const isInList =\r\n      items.length > 0\r\n        ? items.some(\r\n            contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n          )\r\n        : false;\r\n\r\n    isInList\r\n      ? alert(name + ' is already in contacts.')\r\n      : dispatch(addContact({ name, number }), [dispatch]);\r\n\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={formSubmit}>\r\n      <Label>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={e => setName(e.target.value)}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </Label>\r\n\r\n      <Label>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={e => setNumber(e.target.value)}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </Label>\r\n      <button type=\"submit\">Add contact</button>\r\n    </Form>\r\n  );\r\n};\r\n","import * as phonebookAPI from '../../services/phonebook-API';\r\nimport * as phonebookActions from './phonebook-actions';\r\n\r\nexport const fetchContacts = () => async dispatch => {\r\n  dispatch(phonebookActions.fetchContactsRequest());\r\n  try {\r\n    const entities = await phonebookAPI.fetchContacts();\r\n    dispatch(phonebookActions.fetchContactsSuccess(entities));\r\n  } catch (error) {\r\n    dispatch(phonebookActions.fetchContactsError(error));\r\n  }\r\n};\r\n\r\nexport const addContact = contact => async dispatch => {\r\n  dispatch(phonebookActions.addContactRequest());\r\n  try {\r\n    const response = await phonebookAPI.addContact(contact);\r\n    dispatch(phonebookActions.addContactSuccess(response));\r\n  } catch (error) {\r\n    dispatch(phonebookActions.addContactError(error));\r\n  }\r\n};\r\n\r\nexport const deleteContact = id => async dispatch => {\r\n  dispatch(phonebookActions.deleteContactRequest());\r\n  try {\r\n    await phonebookAPI.deleteContact(id);\r\n    dispatch(phonebookActions.deleteContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(phonebookActions.deleteContactError(error));\r\n  }\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Label = styled.label`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  width: 300px;\r\n  padding-left: 30px;\r\n  padding-right: 30px;\r\n`;\r\n","import { Label } from './Filter.styled';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as actions from '../../redux/phonebook/phonebook-actions';\r\nimport { getFilter } from '../../redux/phonebook/phonebook-selectors.js';\r\n\r\nexport const Filter = () => {\r\n  const dispatch = useDispatch();\r\n  const filter = useSelector(getFilter);\r\n\r\n  return (\r\n    <Label>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        value={filter}\r\n        onChange={e => dispatch(actions.filterContacts(e.target.value))}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n      />\r\n    </Label>\r\n  );\r\n};\r\n","import styled from '@emotion/styled';\r\nexport const Button = styled.button`\r\n  margin-left: 10px;\r\n  height: 30px;\r\n  display: inline-block;\r\n`;\r\n\r\nexport const Li = styled.li`\r\n  align-items: center;\r\n  list-style-type: circle;\r\n  list-style-color: black;\r\n`;\r\n\r\nexport const P = styled.p`\r\n  display: inline-block;\r\n`;\r\n","import { Button, Li, P } from './ContactList.styled';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilteredContacts } from '../../redux/phonebook/phonebook-selectors';\r\nimport {\r\n  fetchContacts,\r\n  deleteContact,\r\n} from '../../redux/phonebook/phonebook-operations';\r\nimport { useEffect } from 'react';\r\n\r\nexport const ContactList = () => {\r\n  const filteredContacts = useSelector(getFilteredContacts);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => dispatch(fetchContacts()), [dispatch]);\r\n\r\n  return (\r\n    filteredContacts.length > 0 && (\r\n      <ul>\r\n        {filteredContacts.map(contact => (\r\n          <Li key={contact.id}>\r\n            <P>\r\n              {contact.name}:{contact.number}\r\n            </P>\r\n            <Button\r\n              id={contact.id}\r\n              type=\"button\"\r\n              onClick={e => dispatch(deleteContact(e.target.id), [dispatch])}\r\n            >\r\n              Delete\r\n            </Button>\r\n          </Li>\r\n        ))}\r\n      </ul>\r\n    )\r\n  );\r\n};\r\n","import { ContactForm } from './ContactForm/ContactForm';\r\nimport { Filter } from './Filter/Filter';\r\nimport { ContactList } from './ContactList/ContactList';\r\n\r\nexport const App = () => (\r\n  <>\r\n    <h1>Phonebook</h1>\r\n    <ContactForm />\r\n    <h2>Contacts</h2>\r\n    <Filter />\r\n    <ContactList />\r\n  </>\r\n);\r\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  filterContacts,\n} from './phonebook-actions';\n\nconst entities = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(item => String(item.id) !== payload),\n});\n\nconst isLoading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContactsRequest]: () => null,\n  [fetchContactsSuccess]: () => null,\n  [fetchContactsError]: (_, { payload }) => payload,\n  [addContactRequest]: () => null,\n  [addContactSuccess]: () => null,\n  [addContactError]: (_, { payload }) => payload,\n  [deleteContactRequest]: () => null,\n  [deleteContactSuccess]: () => null,\n  [deleteContactError]: (_, { payload }) => payload,\n});\n\nconst itemsReducer = combineReducers({\n  entities,\n  isLoading,\n  error,\n});\n\nconst filterReducer = createReducer('', {\n  [filterContacts]: (_, { payload }) => payload,\n});\n\nexport const contactsReducer = combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n});\n","import { contactsReducer } from './phonebook/phonebook-reducers';\nimport { configureStore } from '@reduxjs/toolkit';\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  devTools: process.env.NODE_ENV === 'development',\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App.jsx';\nimport { store } from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}